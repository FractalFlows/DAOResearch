// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"minter","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"storedData","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[],"name":"getURL","outputs":[{"name":"theURL","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"mint","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"x","type":"uint256"}],"name":"set","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"retVal","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"x","type":"string"}],"name":"setURL","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"send","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Sent","type":"event"}],
    binary: "6000805433600160a060020a0319909116178155600a6002908155600160a060020a03321682526001602081815260408085206103e8905560a0905260096060527f456d657267656e6365000000000000000000000000000000000000000000000060805260048054948190527f456d657267656e636500000000000000000000000000000000000000000000128155936100e4937f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b61010094831615949094026000190190911604601f01048101905b8082111561017957600081556001016100d0565b50506040805180820190915260028082527fc3860000000000000000000000000000000000000000000000000000000000006020928301908152600580546000829052915160ff191660041781559261017d926001831615610100026000190190921691909104601f01047f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0908101906100d0565b5090565b50506006805460ff191660101790556105488061019a6000396000f3606060405236156100985760e060020a600035046306fdde03811461009a57806307546172146100f857806327e235e31461010a5780632a1afcd914610122578063313ce5671461012b57806338bcdc1c1461013757806340c10f19146101ad57806360fe47b1146101d35780636d4ce63c146101de57806377343408146101e857806395d89b4114610294578063d0679d34146102f4575b005b6040805160048054602060026001831615610100026000190190921691909104601f810182900482028401820190945283835261032393908301828280156104025780601f106103d757610100808354040283529160200191610402565b610391600054600160a060020a031681565b6103ae60043560016020526000908152604090205481565b6103ae60025481565b6103c060065460ff1681565b610323604080516020810190915260008152600a341115610443576003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104a85780601f1061047d576101008083540402835291602001916104a8565b610098600435602435600054600160a060020a039081163391909116146104b4576104d3565b600435600255610098565b6103ae6002545b90565b6040805160206004803580820135601f81018490048402850184019095528484526100989491936024939092918401919081908401838280828437509496505050505050508060036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061040a57805160ff19168380011785555b5061043a9291505b8082111561043f5760008155600101610280565b61032360058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156104025780601f106103d757610100808354040283529160200191610402565b610098600435602435600160a060020a033316600090815260016020526040902054819010156104d7576104d3565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156103835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b6040805160ff929092168252519081900360200190f35b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b505050505081565b82800160010185558215610278579182015b8281111561027857825182600050559160200191906001019061041c565b505050565b5090565b5060408051808201909152601181527f687474703a2f2f676f6f676c652e636f6d00000000000000000000000000000060208201526101e5565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b505050505090506101e5565b600160a060020a03821660009081526001602052604090208054820190555b5050565b600160a060020a0333811660008181526001602090815260408083208054879003905593861680835291849020805486019055835192835282015280820183905290517f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33459181900360600190a1505056",
    unlinked_binary: "6000805433600160a060020a0319909116178155600a6002908155600160a060020a03321682526001602081815260408085206103e8905560a0905260096060527f456d657267656e6365000000000000000000000000000000000000000000000060805260048054948190527f456d657267656e636500000000000000000000000000000000000000000000128155936100e4937f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b61010094831615949094026000190190911604601f01048101905b8082111561017957600081556001016100d0565b50506040805180820190915260028082527fc3860000000000000000000000000000000000000000000000000000000000006020928301908152600580546000829052915160ff191660041781559261017d926001831615610100026000190190921691909104601f01047f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0908101906100d0565b5090565b50506006805460ff191660101790556105488061019a6000396000f3606060405236156100985760e060020a600035046306fdde03811461009a57806307546172146100f857806327e235e31461010a5780632a1afcd914610122578063313ce5671461012b57806338bcdc1c1461013757806340c10f19146101ad57806360fe47b1146101d35780636d4ce63c146101de57806377343408146101e857806395d89b4114610294578063d0679d34146102f4575b005b6040805160048054602060026001831615610100026000190190921691909104601f810182900482028401820190945283835261032393908301828280156104025780601f106103d757610100808354040283529160200191610402565b610391600054600160a060020a031681565b6103ae60043560016020526000908152604090205481565b6103ae60025481565b6103c060065460ff1681565b610323604080516020810190915260008152600a341115610443576003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104a85780601f1061047d576101008083540402835291602001916104a8565b610098600435602435600054600160a060020a039081163391909116146104b4576104d3565b600435600255610098565b6103ae6002545b90565b6040805160206004803580820135601f81018490048402850184019095528484526100989491936024939092918401919081908401838280828437509496505050505050508060036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061040a57805160ff19168380011785555b5061043a9291505b8082111561043f5760008155600101610280565b61032360058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156104025780601f106103d757610100808354040283529160200191610402565b610098600435602435600160a060020a033316600090815260016020526040902054819010156104d7576104d3565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156103835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b6040805160ff929092168252519081900360200190f35b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b505050505081565b82800160010185558215610278579182015b8281111561027857825182600050559160200191906001019061041c565b505050565b5090565b5060408051808201909152601181527f687474703a2f2f676f6f676c652e636f6d00000000000000000000000000000060208201526101e5565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b505050505090506101e5565b600160a060020a03821660009081526001602052604090208054820190555b5050565b600160a060020a0333811660008181526001602090815260408083208054879003905593861680835291849020805486019055835192835282015280820183905290517f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33459181900360600190a1505056",
    address: "0x9ce8812383e3e37e2113771ce5fbf50e4458ce40",
    generated_with: "2.0.9",
    contract_name: "Emergence"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Emergence error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Emergence error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Emergence error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Emergence error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Emergence = Contract;
  }

})();
