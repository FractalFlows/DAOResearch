// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"minter","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"storedData","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"getURL","outputs":[{"name":"theURL","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"mint","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"x","type":"uint256"}],"name":"set","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"retVal","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"x","type":"string"}],"name":"setURL","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"send","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Sent","type":"event"}],
    binary: "6060604052600160a060020a033216600090815260016020526040812061271090558054600160a060020a03191633179055600a600255610418806100446000396000f3606060405236156100775760e060020a600035046307546172811461007957806327e235e31461008b5780632a1afcd9146100a357806338bcdc1c146100ac57806340c10f191461012257806360fe47b1146101485780636d4ce63c14610153578063773434081461015d578063d0679d341461020e575b005b61023d600054600160a060020a031681565b61025a60043560016020526000908152604090205481565b61025a60025481565b61026c604080516020810190915260008152600a341115610313576003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103785780601f1061034d57610100808354040283529160200191610378565b610077600435602435600054600160a060020a03908116339190911614610384576103a3565b600435600255610077565b61025a6002545b90565b6100776004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437509496505050505050508060036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102da57805160ff19168380011785555b5061030a9291505b8082111561030f57600081556001016101fa565b610077600435602435600160a060020a033316600090815260016020526040902054819010156103a7576103a3565b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b828001600101855582156101f2579182015b828111156101f25782518260005055916020019190600101906102ec565b505050565b5090565b5060408051808201909152601181527f687474703a2f2f676f6f676c652e636f6d000000000000000000000000000000602082015261015a565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050905061015a565b600160a060020a03821660009081526001602052604090208054820190555b5050565b600160a060020a0333811660008181526001602090815260408083208054879003905593861680835291849020805486019055835192835282015280820183905290517f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33459181900360600190a1505056",
    unlinked_binary: "6060604052600160a060020a033216600090815260016020526040812061271090558054600160a060020a03191633179055600a600255610418806100446000396000f3606060405236156100775760e060020a600035046307546172811461007957806327e235e31461008b5780632a1afcd9146100a357806338bcdc1c146100ac57806340c10f191461012257806360fe47b1146101485780636d4ce63c14610153578063773434081461015d578063d0679d341461020e575b005b61023d600054600160a060020a031681565b61025a60043560016020526000908152604090205481565b61025a60025481565b61026c604080516020810190915260008152600a341115610313576003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103785780601f1061034d57610100808354040283529160200191610378565b610077600435602435600054600160a060020a03908116339190911614610384576103a3565b600435600255610077565b61025a6002545b90565b6100776004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437509496505050505050508060036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102da57805160ff19168380011785555b5061030a9291505b8082111561030f57600081556001016101fa565b610077600435602435600160a060020a033316600090815260016020526040902054819010156103a7576103a3565b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b828001600101855582156101f2579182015b828111156101f25782518260005055916020019190600101906102ec565b505050565b5090565b5060408051808201909152601181527f687474703a2f2f676f6f676c652e636f6d000000000000000000000000000000602082015261015a565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050905061015a565b600160a060020a03821660009081526001602052604090208054820190555b5050565b600160a060020a0333811660008181526001602090815260408083208054879003905593861680835291849020805486019055835192835282015280820183905290517f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33459181900360600190a1505056",
    address: "0x666928f13d505eb8f397e90eb41481a0d6140ab6",
    generated_with: "2.0.9",
    contract_name: "Emergence"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Emergence error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Emergence error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Emergence error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Emergence error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Emergence = Contract;
  }

})();
